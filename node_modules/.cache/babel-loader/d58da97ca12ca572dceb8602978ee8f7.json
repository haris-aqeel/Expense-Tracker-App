{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\expense_tracker_app-master\\\\expense_tracker_app-master\\\\src\\\\components\\\\AddTransaction.js\";\nimport React, { useState, useContext } from \"react\";\nimport { GlobalContext } from '../context/GlobalContext';\nexport const AddTransaction = () => {\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      // Generate random ID\n      id: Math.floor(Math.random() * 100000000),\n      name: name,\n      // parse added amout to a number\n      amount: +amount\n    };\n    addTransaction(newTransaction); // console.log(newTransaction);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Add new transaction\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    placeholder: \"Enter name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Amount \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }\n  }), \"(negative - expense, positive - income)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: amount,\n    onChange: e => {\n      setAmount(e.target.value);\n    },\n    placeholder: \"Enter amount...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Add transaction\")));\n};","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/expense_tracker_app-master/expense_tracker_app-master/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","AddTransaction","name","setName","amount","setAmount","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","addTransaction","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AAIA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,cAAc,GAAG;AACrB;AACAC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CAFiB;AAGrBX,MAAAA,IAAI,EAAEA,IAHe;AAIrB;AACAE,MAAAA,MAAM,EAAE,CAACA;AALY,KAAvB;AAQAU,IAAAA,cAAc,CAACL,cAAD,CAAd,CAVsB,CAWtB;AACD,GAZD;;AAcA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAM,IAAA,QAAQ,EAAEH,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,MAAAA,OAAO,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAP;AACD,KALH;AAME,IAAA,WAAW,EAAC,eANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,4CADF,eAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEZ,MAFT;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAO;AACfF,MAAAA,SAAS,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAT;AACD,KALH;AAME,IAAA,WAAW,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAZF,eA0BE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA1BF,CAFF,CADF;AAiCD,CAnDM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {GlobalContext} from '../context/GlobalContext';\n\n\n\nexport const AddTransaction = () => {\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      // Generate random ID\n      id: Math.floor(Math.random() * 100000000),\n      name: name,\n      // parse added amout to a number\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n    // console.log(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Name</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            placeholder=\"Enter name...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}